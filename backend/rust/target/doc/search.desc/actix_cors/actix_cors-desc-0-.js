searchState.loadedDescShard("actix_cors", 0, "Cross-Origin Resource Sharing (CORS) controls for Actix …\nRequest header <code>Access-Control-Request-Headers</code> has an …\nRequest header <code>Access-Control-Request-Method</code> has an …\nBuilder for CORS middleware.\nErrors that can occur when processing CORS guarded …\nOne or more request headers are not allowed.\nRequest method is not allowed.\nRequest header <code>Origin</code> is required but was not provided.\nRequest header <code>Access-Control-Request-Method</code> is required …\nOrigin is not allowed to make this request.\nAllowed origin argument must not be wildcard (<code>*</code>).\nResets allowed request header list to a state where any …\nResets allowed methods list to all methods.\nResets allowed origin list to a state where any origin is …\nAdd an allowed request header.\nSets a list of request header field names which can be …\nSets a list of methods which allowed origins can perform.\nAdds an origin that is allowed to make requests.\nDeterminates allowed origins by processing requests which …\nConfigures whether requests should be pre-emptively …\nA restrictive (security paranoid) set of defaults.\nDisables preflight request handling.\nDisables <code>Vary</code> header support.\nResets exposed response header list to a state where all …\nSets a list of headers which are safe to expose to the API …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets a maximum time (in seconds) for which this CORS …\nConstructs a very permissive set of defaults for quick …\nConfigures use of wildcard (<code>*</code>) origin in responses when …\nAllows users to make authenticated requests.")