searchState.loadedDescShard("postgrest", 0, "postgrest-rs\nQueryBuilder struct\nFinds all rows whose range value on the stated <code>column</code> is …\nFinds all rows satisfying all of the filters.\nAuthenticates the request with JWT.\nBuild the PostgREST request.\nFinds all rows whose json, array, or range value on the …\nFinds all rows whose json, array, or range value on the …\nPerforms a DELETE on the table.\nFinds all rows whose value on the stated <code>column</code> exactly …\nRetrieves the total size of the result using some …\nRetrieves the (accurate) total size of the result.\nExecutes the PostgREST request.\nLimits the result of a foreign table with the specified …\nReturns the argument unchanged.\nPerform a table operation.\nReturns the argument unchanged.\nFinds all rows whose tsvector value on the stated <code>column</code> …\nFinds all rows whose value on the stated <code>column</code> is greater …\nFinds all rows whose value on the stated <code>column</code> is greater …\nFinds all rows whose value in the stated <code>column</code> matches …\nFinds all rows whose value on the stated <code>column</code> is found …\nPerforms an INSERT of the <code>body</code> (in JSON) into the table.\nAdd arbitrary headers to the request. For instance when …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA check for exact equality (null, true, false), finds all …\nFinds all rows whose value in the stated <code>column</code> matches …\nLimits the result with the specified <code>count</code>.\nFinds all rows whose value on the stated <code>column</code> is less …\nFinds all rows whose value on the stated <code>column</code> is less …\nFinds all rows whose value on the stated <code>column</code> doesn’t …\nCreates a new <code>Builder</code> with the specified <code>schema</code>.\nCreates a Postgrest client.\nFinds all rows which doesn’t satisfy the filter.\nFinds all rows whose range value on the stated <code>column</code> does …\nFinds all rows whose range value on the stated <code>column</code> does …\nResolve upsert conflicts on unique columns other than the …\nFinds all rows satisfying at least one of the filters.\nOrders the result with the specified <code>columns</code>.\nOrders the result of a foreign table with the specified …\nFinds all rows whose array or range value on the stated …\nFinds all rows whose tsvector value on the stated <code>column</code> …\nEstimates the total size of the result using PostgreSQL …\nFinds all rows whose tsvector value on the stated <code>column</code> …\nLimits the result to rows within the specified range, …\nPerforms a stored procedure call. This should only be used …\nPerform a stored procedure call.\nSwitches the schema.\nPerforms horizontal filtering with SELECT.\nRetrieves only one row from the result.\nFinds all rows whose range value on the stated <code>column</code> is …\nFinds all rows whose range value on the stated <code>column</code> is …\nPerforms an UPDATE using the <code>body</code> (in JSON) on the table.\nPerforms an upsert of the <code>body</code> (in JSON) into the table.\nFinds all rows whose tsvector value on the stated <code>column</code> …")