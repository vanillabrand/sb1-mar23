# Trading API Environment Configuration
# Copy this file to .env and update the values for your environment

# =============================================================================
# ENVIRONMENT
# =============================================================================
ENVIRONMENT=development
# Options: development, staging, production

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
HOST=127.0.0.1
PORT=8080
WORKERS=4
MAX_CONNECTIONS=1000
KEEP_ALIVE=75
CLIENT_TIMEOUT=5000

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production-minimum-32-chars
JWT_EXPIRATION_HOURS=24
BCRYPT_COST=12
RATE_LIMIT_RPM=100
MAX_REQUEST_SIZE=1048576
SESSION_TIMEOUT_MINUTES=60

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://127.0.0.1:5173

# =============================================================================
# DATABASE CONFIGURATION (SUPABASE)
# =============================================================================
VITE_SUPABASE_URL=https://your-project.supabase.co
VITE_SUPABASE_ANON_KEY=your-anon-key
SUPABASE_SERVICE_KEY=your-service-key

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
RUST_LOG=info
LOG_FORMAT=json
# LOG_FILE=/var/log/trading-api.log

# =============================================================================
# EXTERNAL API CONFIGURATION
# =============================================================================
# DeepSeek AI API
VITE_DEEPSEEK_API_KEY=your-deepseek-api-key
DEEPSEEK_API_URL=https://api.deepseek.com/v1/chat/completions

# CoinDesk API
COINDESK_API_KEY=your-coindesk-api-key

# External API Rate Limiting
EXTERNAL_API_RATE_LIMIT=60
EXTERNAL_API_TIMEOUT=30000

# =============================================================================
# EXCHANGE CONFIGURATION
# =============================================================================
# Binance Production
BINANCE_API_KEY=your-binance-api-key
BINANCE_API_SECRET=your-binance-api-secret
VITE_BINANCE_BASE_URL=https://api.binance.com

# Binance TestNet (for demo mode)
VITE_BINANCE_TESTNET_API_KEY=your-testnet-api-key
VITE_BINANCE_TESTNET_API_SECRET=your-testnet-api-secret
VITE_BINANCE_TESTNET_BASE_URL=https://testnet.binance.vision
VITE_BINANCE_FUTURES_TESTNET_BASE_URL=https://testnet.binancefuture.com
VITE_BINANCE_TESTNET_WEBSOCKETS_URL=wss://testnet.binancefuture.com/ws-fapi/v1

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
DEMO_MODE_ENABLED=true
TRADING_ENABLED=true
MAX_STRATEGIES_PER_PROCESS=50
HEALTH_CHECK_INTERVAL=30000
MARKET_FIT_CHECK_INTERVAL=14400000
RECOVERY_ATTEMPTS=3

# =============================================================================
# MONITORING & METRICS
# =============================================================================
# Prometheus metrics endpoint is available at /metrics
# Health check endpoint is available at /health

# =============================================================================
# PRODUCTION DEPLOYMENT NOTES
# =============================================================================
# 1. Change JWT_SECRET to a secure random string (minimum 32 characters)
# 2. Set ENVIRONMENT=production
# 3. Use strong API keys for all external services
# 4. Configure proper CORS origins for your frontend domain
# 5. Set up proper logging with LOG_FILE in production
# 6. Consider using a reverse proxy (nginx) for SSL termination
# 7. Set up monitoring and alerting for the /health and /metrics endpoints
# 8. Use environment-specific Supabase projects
# 9. Enable rate limiting appropriate for your use case
# 10. Review and adjust all timeout and connection limits for your infrastructure
